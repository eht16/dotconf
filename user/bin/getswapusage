#!/usr/bin/env python
# -*- coding: utf-8 -*-
#

"""
Get current swap usage for all running processes
Based on a script Erik Ljungstrom and Mikko Rantalainen as found on Stackoverflow[1],
just rewritten in Python.

Surely this does not give very correct values in overall swap usage on a system
but it at least helps to get an idea of the system's swap usage and which processes
are swapping out most.

[1] http://stackoverflow.com/questions/479953/how-to-find-out-which-processes-are-swapping-in-linux

Author:  Enrico TrÃ¶ger
License: GPL v2 or later
"""

import os
from decimal import Decimal
from errno import EACCES


class PermissionDenied(Exception):
    pass


def naturalsize(bytes_, precision=1):
    suffixes = ['B', 'Ki', 'Mi', 'Gi', 'Ti']
    suffix_index = 0
    while bytes_ >= 1024:
        suffix_index += 1
        bytes_ = bytes_ / Decimal(1024)

    bytes_rounded = round(bytes_, precision)
    return "{:.{precision}f} {:>2}".format(
        bytes_rounded,
        suffixes[suffix_index],
        precision=precision)


def read_proc_file(pid, filename):
    filename = os.path.join('/proc', pid, filename)
    with open(filename) as file_:
        try:
            content = file_.read().strip()
        except IOError as exc:
            if exc.errno == EACCES:
                raise PermissionDenied from exc
            content = None

    return content


def read_swap_usage_from_process_smaps(pid):
    swap_usage = 0
    smaps = read_proc_file(pid, 'smaps')
    if not smaps:
        return 0
    for line in smaps.splitlines():
        if line.startswith('Swap'):
            line_parts = line.split()
            try:
                swap_usage += int(line_parts[1]) * 1024
            except (IndexError, ValueError, TypeError):
                pass

    return swap_usage


def read_process_cmdline(pid):
    content = read_proc_file(pid, 'cmdline')
    # replace NULL bytes used as delimiters
    cmdline = content.replace('\0', ' ')
    # strip
    cmdline = cmdline.strip()
    # shorten to max. 80 characters
    cmdline = cmdline[:80]
    return cmdline


def get_swap_usage():
    overall_swap_usage = 0
    processes = list()
    for pid in os.listdir('/proc'):
        if not pid.isdigit():
            continue
        command = read_process_cmdline(pid)
        try:
            swap_usage = read_swap_usage_from_process_smaps(pid)
        except PermissionDenied:
            continue

        if swap_usage > 0:
            process = (pid, swap_usage, command)
            processes.append(process)
            overall_swap_usage += swap_usage

    return overall_swap_usage, processes


def main():
    overall_swap_usage, processes = get_swap_usage()
    for process in sorted(processes, key=lambda x: x[1]):
        pid = process[0]
        swap_usage = naturalsize(process[1])
        command = process[2]
        print(f'PID={pid:8} swapped {swap_usage:>10} {command}')
    print('----------------------------------------------------------------------')
    print(f'Overall swap used: {naturalsize(overall_swap_usage)}')


if __name__ == '__main__':
    main()
