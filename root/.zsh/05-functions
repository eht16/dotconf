#!/usr/bin/zsh

# list all user zsh functions
function flist() {
    grep -B 1 "^function" $HOME/.zsh/functions | grep -v "^\-\-$" | \
        awk '{f=$0; getline; gsub(/ ?\(\)/, ":"); if(/^function/) { printf("--> %-20s", $2); if(f ~ /^#/) { gsub(/^#[:space:]*/, "", f); printf(" %s", f); }; printf("\n"); }}' | sort -u
}

# display a list of possible random passwords.
function spwgen() {
    if [[ "$1" == "-h" ]] {
        echo "Usage: $0 <pwlen>"
    } else {
        local pl="$1"
        test -z "$pl" && pl=16
        perl <<EOPERL
# weaker set
my @a = ("a".."z","A".."Z","0".."9");
# stronger set
my @b = ("a".."z","A".."Z","0".."9",(split //, q{<>@&%$*^#/?!}));
for (1.."5") {
    print join "", map { \$a[rand @a] } (1.."$pl");
    print qq{\n};
    print join "", map { \$b[rand @b] } (1.."$pl");
    print qq{\n};
}
EOPERL
    }
}

# list all programs with prefix
function plp() {
    if [[ $# = 0 ]] {
        echo "Usage:    $0 program"
        echo "Example:  $0 zsh"
        echo "Lists all occurrences of program in the current PATH."
    } else {
        ls -l ${^path}/*$1*(*N)
    }
}

# mkdir && cd
function mcd() {
    test -n "$1" && mkdir "$1" && cd "$1"
}

# show date highlighted
function cal() {
    var=$(/usr/bin/cal)
    echo "${var/$(date +%-d)/$(echo -e "\033[1;31m$(date +%-d)\033[0m")}"
}

# fancy xterm prompt update on directory change (http://www.refining-linux.org/archives/42/ZSH-Gem-8-Hook-function-chpwd/)
function chpwd() {
    print -Pn "\e]2;%n@%M: %~\a"
}

# list sizes of files and directory on first level
# inspired by http://www.cyberciti.biz/faq/how-do-i-sort-du-h-output-by-size-under-linux/
function duf() {
    # use first argument or "." aka $PWD
    directory=${1:=.}
    du --all --human-readable --max-depth=1 -- $directory | sort --human-numeric-sort
}

